#!python
import os
import signal

from baker import command
import sys
from blackdog import BlackDog, HTTPServer, PluginStage, ServerAlreadyRunningException, ServerNotRunningException


def _daemonize():
    if os.fork() > 0:
        sys.exit(0)
    os.setsid()
    if os.fork() > 0:
        sys.exit(0)


@command
def start(port=8140, daemonize=True):
    bd = BlackDog.instance
    if bd.is_server_running():
        raise ServerAlreadyRunningException()

    if daemonize:
        _daemonize()

        with open(bd.pidfile, 'w') as f:
            f.write(str(os.getpid()))

    with HTTPServer(port) as server:
        bd.logger.info('Starting server...')
        server.serve_forever()


@command
def stop():
    bd = BlackDog.instance
    if not bd.is_server_running():
        raise ServerNotRunningException()
    os.kill(bd.get_server_pid(), signal.SIGTERM)


@command
def scan(*args):
    bd = BlackDog.instance
    stages = []
    for stage in args:
        stages.append(PluginStage.from_string(stage))

    if len(stages) == 0:
        bd.bukkitdev.scan()
    else:
        bd.bukkitdev.scan(stages)

@command
def get(plugin, version=None):
    bd = BlackDog.instance
    bd.bukkitdev.get_plugin(plugin, version)

if __name__ == '__main__':
    BlackDog().main()